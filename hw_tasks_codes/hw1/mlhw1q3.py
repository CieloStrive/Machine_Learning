# -*- coding: utf-8 -*-
"""mlhw1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L16CLVBWBJdkFrc5ZBJAcM1Pw8byvTWp

Question3

Part(a):
"""

import numpy as np

mean = np.zeros(3)#d=3
conv = np.diag(np.ones(3))
samplenumber = 10000
sample = np.random.multivariate_normal(mean,conv,samplenumber)
#print("samples:",sample)

"""Part(b):"""

#calculate norms and theirs mean and deviation
norm = np.linalg.norm(sample,ord=2,axis=1)
print("norms:",norm)
normmean = np.mean(norm)
print("mean:",normmean)
normdev = np.std(norm)
print("deviation:",normdev)

import matplotlib.pyplot as plt

#plot histogram for exploring distribution of norm on frequency
plt.hist(norm,bins=50)# divide range of norm value into 50 intervals
plt.grid()
plt.title('Histogram of Euclidean Norms')
plt.xlabel('Norm Values',fontsize=16)
plt.ylabel('Frequency(Times)',fontsize=16)

"""Part(c):

plot Histogram of Euclidean Norms for different d
"""

import matplotlib.pyplot as plt
import numpy as np

#container of d, mean, deviation 
d = [50,100,200,500,1000]
normmeans = np.zeros(5)
normdevs = np.zeros(5)
i = 0  #counter

for n in d:  
  mean = np.zeros(n)
  conv = np.diag(np.ones(n))
  samplenumber = 10000
  sample = np.random.multivariate_normal(mean,conv,samplenumber)
  #print("samples when d =",d," :",sample)
  norm = np.linalg.norm(sample,ord=2,axis=1)
  #print("norms when d = ",d," :",norm)
  
  #plot histograms for different d
  plt.figure()
  plt.hist(norm,bins=50)
  plt.grid()
  dim = str(n)
  plt.title('Histogram of Euclidean Norms when d = '+dim)
  plt.xlabel('Norm Values',fontsize=16)
  plt.ylabel('Frequency(Times)',fontsize=16)
  
  #record means and deviations
  normmeans[i] = np.mean(norm)
  normdevs[i] = np.std(norm)
  i=i+1
  #print("mean of norms when d = ",d," :",normmean[i])
  #print("deviation of norms when d = ",d," :",normdev[i])

"""plot variation for means and deviations for different d"""

plt.figure()
plt.title('Variation of Mean')
plt.plot(d,normmeans,'r')
plt.plot(d,normmeans,'r^')
M=np.around(normmeans,decimals=3)
for a,b in zip(d,M):
  plt.text(a,b,(a,b),ha='center', va='bottom',fontsize =10)
plt.grid()
plt.xlabel('Dimension',fontsize=16)
plt.ylabel('Mean',fontsize=16)  

plt.figure()
plt.title('Variation of Deviation')
plt.plot(d,normdevs,'b')
plt.plot(d,normdevs,'bs')
D=np.around(normdevs,decimals=3)
for x,y in zip(d,D):
  plt.text(x,y,(x,y),ha='center', va='bottom',fontsize =10)  
plt.grid()
plt.xlabel('Dimension',fontsize=16)
plt.ylabel('Deviation',fontsize=16)

plt.figure()
plt.title('Comparison of variation of Mean and Deviation')
plt.plot(d,normmeans,'r',d,normdevs,'b')
plt.plot(d,normmeans,'r^',d,normdevs,'bs')
for a,b in zip(d,M):
  plt.text(a,b,(a,b),ha='center', va='bottom',fontsize =10)
for x,y in zip(d,D):
  plt.text(x,y,(x,y),ha='center', va='bottom',fontsize =10)  
plt.grid()
plt.xlabel('Dimension',fontsize=16)
plt.ylabel('RedMean BlueDeviation',fontsize=16)

"""Part(d):
     According to diagram above, I discover that:

1.in high dimension, most of mass is concentrated near the mean of Euclidean norms,

2.mean of norms increase with dimension,

3.deviation is nearly not changed with dimension.
"""